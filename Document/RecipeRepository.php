<?php

namespace Ibtikar\GlanceDashboardBundle\Document;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * RecipeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipeRepository extends DocumentRepository
{

    public function getDailySolution()
    {
        return $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                ->field('status')->equals(Recipe::$statuses['publish'])
                ->field('publishLocations.section')->equals('Daily-solution')
                ->sort('publishedAt', 'DESC')
                ->getQuery()->getSingleResult();
    }

    public function getPreviousDailySolution($skip = 0, $limit = 4)
    {
        return $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                ->field('status')->equals(Recipe::$statuses['publish'])
                ->field('publishLocations.section')->notEqual('Daily-solution')
                ->field('deleted')->equals(FALSE)
                ->field('coverPhoto')->prime(true)
                ->sort('publishedAt', 'DESC')
                ->eagerCursor()
                ->limit($limit)
                ->skip($skip)
                ->getQuery()->execute();
    }

    public function getMostView($skip = 0, $limit = 4)
    {
        $date = new \DateTime();
        $date->modify("-1 month");
        return $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                ->field('status')->equals(Recipe::$statuses['publish'])
                ->field('deleted')->equals(FALSE)
                ->field('coverPhoto')->prime(true)
                ->field('publishedAt')->gte($date)
                ->sort('noOfViews', 'DESC')
                ->eagerCursor()
                ->limit($limit)
                ->skip($skip)
                ->getQuery()->execute();
    }

    /**
     * @author Ahmad Gamal <a.gamal@ibtikar.net.sa>
     * @param string $tagId
     * @param integer $limit
     * @param integer $skip
     * @return object
     */
    public function getContentInTag($tagId, $limit, $skip) {
        $queryBuilder = $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                        ->field('status')->equals(Recipe::$statuses['publish'])
                        ->field('deleted')->equals(FALSE)
                        ->field('coverPhoto')->prime(true);

        $queryBuilder->addOr($queryBuilder->expr()->field('tags')->equals($tagId));
        $queryBuilder->addOr($queryBuilder->expr()->field('tagsEn')->equals($tagId));

        $queryBuilder->sort('publishedAt', 'DESC')
                            ->eagerCursor(true)
                            ->limit($limit+1)
                            ->skip($skip)
                            ;

        return $queryBuilder->getQuery()->execute();
    }

    /**
     * @author Ahmad Gamal <a.gamal@ibtikar.net.sa>
     * @param string $tagId
     * @return integer
     */
    public function getCountContentInTag($tagId) {
        $queryBuilder = $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                        ->field('status')->equals(Recipe::$statuses['publish'])
                        ->field('deleted')->equals(FALSE);

        $queryBuilder->addOr($queryBuilder->expr()->field('tags')->equals($tagId));
        $queryBuilder->addOr($queryBuilder->expr()->field('tagsEn')->equals($tagId));

        return $queryBuilder->getQuery()->count();
    }

    /**
     * @author Ahmad Gamal <a.gamal@ibtikar.net.sa>
     * @param string $keyword
     * @param integer $limit
     * @param integer $skip
     * @param integer $sort
     * @return object
     */
    public function getSearchContentByKeyword($keyword, $limit, $skip, $sort) {
        $queryBuilder = $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                        ->field('status')->equals(Recipe::$statuses['publish'])
                        ->field('deleted')->equals(FALSE)
                        ->field('coverPhoto')->prime(true);

        $queryBuilder->addOr($queryBuilder->expr()->field('title')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));
        $queryBuilder->addOr($queryBuilder->expr()->field('titleEn')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));

        $queryBuilder->addOr($queryBuilder->expr()->field('brief')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));
        $queryBuilder->addOr($queryBuilder->expr()->field('briefEn')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));

        $queryBuilder->addOr($queryBuilder->expr()->field('text')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));
        $queryBuilder->addOr($queryBuilder->expr()->field('textEn')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));

        $queryBuilder->sort($sort, 'DESC')
                            ->eagerCursor(true)
                            ->limit($limit+1)
                            ->skip($skip)
                            ;

        return $queryBuilder->getQuery()->execute();
    }

    /**
     * @author Ahmad Gamal <a.gamal@ibtikar.net.sa>
     * @param string $keyword
     * @return integer count
     */
    public function getCountSearchContentByKeyword($keyword) {
        $queryBuilder = $this->dm->createQueryBuilder('IbtikarGlanceDashboardBundle:Recipe')
                        ->field('status')->equals(Recipe::$statuses['publish'])
                        ->field('deleted')->equals(FALSE);

        $queryBuilder->addOr($queryBuilder->expr()->field('title')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));
        $queryBuilder->addOr($queryBuilder->expr()->field('titleEn')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));

        $queryBuilder->addOr($queryBuilder->expr()->field('brief')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));
        $queryBuilder->addOr($queryBuilder->expr()->field('briefEn')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));

        $queryBuilder->addOr($queryBuilder->expr()->field('text')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));
        $queryBuilder->addOr($queryBuilder->expr()->field('textEn')->equals(new \MongoRegex(('/' . preg_quote(trim($keyword)) . '/i'))));

        return $queryBuilder->getQuery()->count();
    }

}
