{% extends 'IbtikarGlanceDashboardBundle::formLayout.html.twig' %}



{% block form_container %}

 {% form_theme form form_theme %}



    {{ form_start(form)}}

    <div class="tabbable">
        <ul class="nav nav-tabs nav-tabs-highlight">
            <li class="active"><a href="#arabic" data-toggle="tab"><img src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/images/arabic.png')}}" alt="arabic" width="30" height="20"/></a></li>
            <li><a href="#english" data-toggle="tab"><img src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/images/english.png')}}" alt="english" width="30" height="20"/></a></li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="arabic">


                {{ form_row(form.title) }}

                {{ form_row(form.SecondaryTitle) }}

                {{ form_row(form.brief) }}

{#                {{ form_row(form.images) }}#}

            </div><!-- arabic end -->

            <div class="tab-pane" id="english">


                {{ form_row(form.titleEn) }}

                {{ form_row(form.SecondaryTitleEn) }}

                {{ form_row(form.briefEn) }}



            </div><!-- english end -->

        </div>
    </div>
        {{ form_row(form.questions) }}
        <div class="col-9 clearfix">
            <div class="col-md-9">
                <a class="btn btn-lg btn-primary pull-left addQuestion dev-add-competition-question">{% trans from translationDomain %}Add Question{% endtrans %}</a>
            </div>
        </div>
        <hr/>
    {{ form_end(form) }}


{% endblock %}
{% block form_buttons %}
    <div class="row actionButtons">
        <div class="col-xs-12">
            <button class="btn btn-primary  dev-form-submit-btn" type="button">{% trans %}Save{% endtrans %}<i class="icon-checkmark4 position-right"></i></button>
            <button class="btn btn-default dev-form-reset-button" type="button">{% trans %}Reset{% endtrans %}<i class="icon-cross2 position-right"></i></button>



        </div>
    </div>
{% endblock %}


{% block javascripts %}
     {{ parent() }}

    <script type="text/javascript" src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/forms/styling/switchery.min.js')}}"></script>
    <script type="text/javascript" src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/forms/styling/switch.min.js')}}"></script>


    <script type="text/javascript" src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/pages/form_checkboxes_radios.js')}}"></script>

    <script type="text/javascript" src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/media/fancybox.min.js')}}"></script>

    <script type="text/javascript" src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/pages/components_thumbnails.js')}}"></script>


    <!-- Plugin file uploaded JS -->
    <script src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/fileupload/bootstrap-fileupload.js')}}"></script>


    <script src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/fileupload/jquery.cropit.js')}}"></script>

    <!-- drag and drop files -->
    <script type="text/javascript" src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/ui/dragula.min.js')}}"></script>

    <script src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/date/moment-lang.js')}}" type="text/javascript"></script>
    <script src="{{ asset('bundles/ibtikarshareeconomydashboarddesign/js/plugins/date/bootstrap-datetimepicker.min.js')}}" type="text/javascript"></script>
    <script>
        var dateToday = new Date();
            var months$2 = [
                'يناير',
                'فبراير',
                ' مارس',
                ' أبريل',
                ' مايو',
                ' يونيو',
                ' يوليو',
                ' أغسطس',
                ' سبتمبر',
                ' أكتوبر',
                ' نوفمبر',
                ' ديسمبر'
            ];
            moment.updateLocale('en', {
                months: months$2,
                monthsShort: months$2,
                weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
                weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
                weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            })
            moment.locale("en");
            $('#competition_expiryDate').datetimepicker({minDate: dateToday,
            });

    </script>
    <script>
        var answersLimitErrorMessage = '{% trans from 'competition' %}You must add only from 2 to 5 answers{% endtrans %}';
    </script>

    <script>

        $('select').select2();

        var questionNextId = 1;
        $(document).on('click', '.dev-add-competition-question', function() {
            var $questionContainer = $('#competition_questions');
            var prototype = $questionContainer.data('prototype').replace(/questions___name__/g, "questions_"+questionNextId).replace(/\[questions\]\[__name__\]/g, "[questions]["+questionNextId+"]");
            $questionContainer.append(prototype);
            questionNextId++;
            addNewAnswer($('.voteAnswer:last'));
            addNewAnswer($('.voteAnswer:last'));
            $('[id$="_answerDisplay"]:last input[type="radio"]:first').prop('checked',true);
            $('[id$="_resultDisplay"]:last input[type="radio"]:first').prop('checked',true);
            $('[id$="_answerImportance"]:last input[type="radio"]:first').prop('checked',true);
{#            initSelect2();#}
    });

    $(document).on('click', '.dev-remove-competition-question', function() {
            $(this).parents('[id^="competition_questions_"]').remove();
            checkIfLastQuestion();
    });

    /////////////////////////////////////////////////////
    //question.js
    /////////////////////////////////////////////////////
    var nextId = 1;


function  checkIfLastQuestion() {
    $questionsLength = $('.competitionQuestion').children('[id^="competition_questions_"]').length;
    if($questionsLength < 2){
        $('.dev-remove-competition-question').addClass('hide');
    } else {
        $('.dev-remove-competition-question').removeClass('hide');
    }
}

function addAnswersErrorMessage(parent) {
    if(parent.find('.dev-question-answers-error').length === 0) {
        parent.find('.dev-add-question-answer-container').after('<div class="dev-question-answers-error noMargin form-group has-error"><div for="question_answers_0_answer" class="help-block">' + answersLimitErrorMessage + '</div></div>');
    }
}

function removeAnswersErrorMessage(parent) {
    parent.find('.dev-question-answers-error').remove();
}

function correctlyPositionAddButton(parent) {
    var answersInputsContainer = parent.find('.dev-question-answer-container');
    answersInputsContainer.each(function(index) {
        var $this = $(this);
        $this.find('.deleteAnswer').removeClass('last');
        $this.find('.addAnswer').remove();
        if(index === (answersInputsContainer.length - 1)) {
            $this.find('.input-group-btn').prepend('<button class="btn btn-default addAnswer dev-add-question-answer" type="button"><i class="icon-plus2"></i></button>');
            $this.find('.deleteAnswer').addClass('last');
        }
    });
}

function addNewAnswer(elm) {
        var parent = $(elm).hasClass('voteAnswer')?elm:$(elm).parents('.voteAnswer');

        var answersCount = parent.find('input[id^="'+parent.attr('id')+'_"]:visible').length;
        if(answersCount < 5) {
            var $answersContainer = parent;
            var prototype = $answersContainer.data('prototype');
            $answersContainer.append(prototype.replace(/__name__/g, nextId));
            nextId++;
            removeAnswersErrorMessage(parent);
        } else {
            addAnswersErrorMessage(parent);
        }
        checkIfLastQuestion();
        correctlyPositionAddButton(parent);
}


jQuery(document).ready(function ($) {
    correctlyPositionAddButton($('.competitionQuestion:eq(0)'));

    $('[id$="question_answers_"]input').each(function () {
        var id = parseInt($(this).attr('id').replace('question_answers_', '').replace('_answer', ''));
        id++;
        if (id > nextId) {
            nextId = id;
        }
    });

    $('body').on('change','select[id$="_questionType"]',function(e){
        var parent = $(this).parents('[id^="competition_questions_"]');
        if(e.val != "multiple-answer" && e.val != "single-answer"){
            parent.find('.dependant-fields').addClass('hide');
        }else{
            parent.find('.dependant-fields').removeClass('hide');
        }
    });

    $('body').on('ajaxCallback', function() {
        $('.voteAnswer').each(function(){
            correctlyPositionAddButton($(this));
        });
        $('select[id$="_questionType"]').each(function(){
            $(this).trigger('change');
        });
        $('.dependant-fields').removeClass('hide');
    });

    $('body').on('preAjaxCallback', function() {
        removeAnswersErrorMessage($('.dev-page-main-form'));
    });

    $(document).on('click', '.dev-add-question-answer', function() {
        addNewAnswer(this);
    });



    $(document).on('click', '.dev-remove-question-answer', function() {
        var parent = $(this).parents('.voteAnswer');

        var answersCount = parent.find('input[id^="'+parent.attr('id')+'_"]:visible').length;

        if(answersCount > 2) {
            $(this).parents('.dev-question-answer-container').parent().remove();
            removeAnswersErrorMessage(parent);
        } else {
            addAnswersErrorMessage(parent);
        }
        correctlyPositionAddButton(parent);
    });

});


    </script>

{% endblock %}